const fs = require('fs-extra')
const path = require('path')
const prettier = require('prettier')
const { graphqlToOpenApi } = require('graphql-to-openapi')

const pkg = require('../package.json')

const inputQuery = `
query queryUsers {
  users {
    id
    name
  }
}

mutation createOneUser {
  createOneUser(data: {email: "xxx", name: "xxx"}) {
    id
  }
}
`

const schemaString = fs.readFileSync(
  require.resolve('../node_modules/.prisma-mrapi/one/generated/schema.graphql'),
  {
    encoding: 'utf8'
  }
)

const { error, openApiSchema, queryErrors, schemaError } = graphqlToOpenApi({
  schemaString,
  inputQuery
})

error && console.log('\nerror: ', error)
queryErrors && console.log('\nqueryErrors: ', queryErrors)
schemaError && console.log('\nschemaError: ', schemaError)

if (!error && !queryErrors && !schemaError) {
  const name = 'apiDoc'
  const openApiSchemaStr = prettier.format(
    `
    /**
     * This file was generated by mrapi
     * Do not make changes to this file directly
     */
  const ${name} = ${JSON.stringify(openApiSchema)};exports.default=${name}`,
    { ...pkg.prettier, parser: 'babel' }
  )

  const outputPath = path.join(
    process.cwd(),
    'api-v1',
    `${name.replace(/[A-Z]/g, (str, index) => {
      return (index !== 0 ? '-' : '') + str.toLowerCase()
    })}.js`
  )

  fs.outputFileSync(outputPath, openApiSchemaStr)

  console.log(`\nGenerated "${name}":`, outputPath)
}
