import chalk from 'chalk'
import { join } from 'path'
import prettier from 'prettier'
import fs from 'fs-extra'

import type { Options } from '../types'

const pkg = require('../../package.json')

export class Generator {
  protected options: Options = {
    schema: join(process.cwd(), 'node_modules', '@prisma/client'),
    output: join(process.cwd(), '.mrapi'),
    excludeFields: [],
    excludeModels: [],
    excludeFieldsByModel: {},
    excludeQueriesAndMutations: [],
    excludeQueriesAndMutationsByModel: {},
  }

  constructor(customOptions?: Options) {
    this.options = { ...this.options, ...customOptions }
  }

  async run() {
    const outputBasePath = this.options.output
    const intputBasePath = join(__dirname, '../../templates/api')
    ;['paths/users.js', 'paths/users/{id}.js', 'definitions.js'].forEach(
      (item: string) => {
        const str = prettier.format(
          `
/**
 * This file was generated by mrapi
 * Do not make changes to this file directly
 */
${fs.readFileSync(join(intputBasePath, item), {
  encoding: 'utf8',
})}`,
          { ...pkg.prettier, parser: 'babel' },
        )
        fs.outputFileSync(join(outputBasePath, item), str)
      },
    )

    console.log(chalk.green('\nâœ…  GenerateOAS run successful.\n'))
  }
}
